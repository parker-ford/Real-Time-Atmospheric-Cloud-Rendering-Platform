#pragma kernel CSMain

#include "UnityCG.cginc"
#include "../Includes/noise.cginc"

struct Pixel {
    float4 color;
};

RWStructuredBuffer<Pixel> pixels;
float resolution;

[numthreads(1,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float3 uvw = float3(id.xyz) / resolution;
    
    Pixel pixel = pixels[id.x + id.y * resolution + id.z * resolution * resolution];



    // float perlinNoise = perlinNoise_3D_fbm(uvw, .8, 8, 3);
    float perlinNoise = perlinNoise_3D(uvw, 8);
    perlinNoise = remap_f(perlinNoise, -1.0, 1.0, 0.0, 1.0);

    pixel.color = float4(perlinNoise, perlinNoise, perlinNoise, 1.0);

    pixels[id.x + id.y * resolution + id.z * resolution * resolution] = pixel;
}

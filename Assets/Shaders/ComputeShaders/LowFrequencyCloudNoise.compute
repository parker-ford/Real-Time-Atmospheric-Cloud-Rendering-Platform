#pragma kernel CSMain

#include "UnityCG.cginc"
#include "../Includes/noise.cginc"

struct Pixel {
    float4 color;
};

RWStructuredBuffer<Pixel> pixels;
float resolution;

[numthreads(1,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float3 uvw = float3(id.xyz) / resolution;
    
    Pixel pixel = pixels[id.x + id.y * resolution + id.z * resolution * resolution];



    float perlinNoise = perlinNoise_3D_fbm(uvw, .8, 8, 3);

    float cellSize = 4;

    float worleyNoise0 = 1.0 - worleyNoise_3D(uvw, cellSize * 2);

    pixel.color = float4(worleyNoise0, worleyNoise0, worleyNoise0, 1);

    pixels[id.x + id.y * resolution + id.z * resolution * resolution] = pixel;
}
